BEGIN;

DROP TABLE IF EXISTS "user", "service", "review", "user_has_skills", "skill", "role", "message";

CREATE TABLE "user"(
    "id" INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "email" TEXT NOT NULL,
    "firstname" TEXT NOT NULL,
    "lastname" TEXT NOT NULL,
    "street" TEXT NOT NULL,
    "zipcode" TEXT NOT NULL,
    "city" TEXT NOT NULL,
    "password" TEXT NOT NULL,
    "profil_photo" TEXT NOT NULL,
    "description" TEXT NOT NULL,
    "availability" TEXT NOT NULL,
    "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMPTZ,
    "role_id" INTEGER NOT NULL REFERENCES "role"("id") ON DELETE CASCADE,
);

CREATE TABLE "service"(
    "id" INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "object" TEXT NOT NULL,
    "status" TEXT NOT NULL,
    "date" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "sender_id" INTEGER NOT NULL REFERENCES "user"("id") ON DELETE CASCADE,
    "receiver_id" INTEGER NOT NULL REFERENCES "user"("id") ON DELETE CASCADE,
);

CREATE TABLE "review"(
    "id" INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "rating" INT NOT NULL,
    "comment" TEXT NOT NULL,
    "date" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "service_id" INTEGER NOT NULL REFERENCES "service"("id") ON DELETE CASCADE,
    "user_id" INTEGER NOT NULL REFERENCES "user"("id") ON DELETE CASCADE,
);

CREATE TABLE "user_has_skills"(
    "id" INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "skill_id" INTEGER NOT NULL REFERENCES "skill"("id") ON DELETE CASCADE,
    "user_id" INTEGER NOT NULL REFERENCES "user"("id") ON DELETE CASCADE,
    UNIQUE ("skill_id", "user_id"),
);

CREATE TABLE "skill"(
    "id" INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "name" TEXT NOT NULL,
);

CREATE TABLE "role"(
    "id" INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "name" TEXT NOT NULL,
);

CREATE TABLE "message"(
    "id" INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "sending_date" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMPTZ,
    "body" TEXT NOT NULL,
    "sender_id" INTEGER NOT NULL REFERENCES "user"("id") ON DELETE CASCADE,
    "receiver_id" INTEGER NOT NULL REFERENCES "user"("id") ON DELETE CASCADE,
);

COMMIT;